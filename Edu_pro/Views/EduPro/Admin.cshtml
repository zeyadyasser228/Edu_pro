@model IEnumerable<EduPro.Models.CourseModel>
@{
    ViewData["Title"] = "Course Management";
    var currentCategory = Context.Request.Query["category"].ToString();
    var currentFeatured = Context.Request.Query["featured"].ToString();
    var currentSearchTerm = Context.Request.Query["searchTerm"].ToString();
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Course Management Admin Panel</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
          rel="stylesheet" />
    <link rel="stylesheet"
          href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css" />
    <link rel="stylesheet" href="~/css/admin.css" />
</head>
<body>
    <div class="container-fluid">
        <div class="row">
            <!-- Sidebar -->
            <nav id="sidebar"
                 class="col-md-3 col-lg-2 d-md-block bg-dark sidebar collapse">
                <div class="position-sticky pt-3">
                    <ul class="nav flex-column">
                        <li class="nav-item">
                            <a class="nav-link active" href="#">
                                <i class="bi bi-mortarboard-fill me-2"></i>
                                Course Management
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">
                                <i class="bi bi-people-fill me-2"></i>
                                Students
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">
                                <i class="bi bi-person-badge-fill me-2"></i>
                                Instructors
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">
                                <i class="bi bi-gear-fill me-2"></i>
                                Settings
                            </a>
                        </li>
                    </ul>
                </div>
            </nav>

            <!-- Main content -->
            <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
                <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
                    <h1 class="h2">Course Management</h1>
                    <button type="button"
                            class="btn btn-primary"
                            data-bs-toggle="modal"
                            data-bs-target="#addCourseModal">
                        <i class="bi bi-plus-circle me-2"></i>Add New Course
                    </button>
                </div>

                <!-- Course Filter and Search -->
                <div class="row mb-3">
                    <div class="col-md-6">
                        <form method="get" action="@Url.Action("Index", "Admin")">
                            <div class="input-group">
                                <input type="text"
                                       class="form-control"
                                       placeholder="Search courses..."
                                       name="searchTerm"
                                       value="@currentSearchTerm" />
                                <button class="btn btn-outline-secondary" type="submit">
                                    <i class="bi bi-search"></i>
                                </button>
                            </div>
                        </form>
                    </div>
                    <div class="col-md-4">
                        <form method="get" action="@Url.Action("Index", "Admin")">
                            <select class="form-select" name="category" onchange="this.form.submit()">
                                <option value="">All Categories</option>
                                <option value="Programming" @@(currentCategory == "Programming" ? "selected" : "")>Programming</option>
                                <option value="Design" @@(currentCategory == "Design" ? "selected" : "")>Design</option>
                                <option value="Business" @@(currentCategory == "Business" ? "selected" : "")>Business</option>
                                <option value="Marketing" @@(currentCategory == "Marketing" ? "selected" : "")>Marketing</option>
                                <option value="Data Science" @@(currentCategory == "Data Science" ? "selected" : "")>Data Science</option>
                            </select>
                        </form>
                    </div>
                    <div class="col-md-2">
                        <form method="get" action="@Url.Action("Index", "Admin")">
                            <select class="form-select" name="featured" onchange="this.form.submit()">
                                <option value="">All Courses</option>
                                <option value="true" @@(currentFeatured == "true" ? "selected" : "")>Featured</option>
                                <option value="false" @@(currentFeatured == "false" ? "selected" : "")>Regular</option>
                            </select>
                        </form>
                    </div>
                </div>

                <!-- Course Table -->
                <div class="table-responsive">
                    <table class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th>
                                    <input type="checkbox"
                                           class="form-check-input"
                                           id="selectAll" />
                                </th>
                                <th>Course ID</th>
                                <th>Thumbnail</th>
                                <th>Title</th>
                                <th>Category</th>
                                <th>Price</th>
                                <th>Level</th>
                                <th>Featured</th>
                                <th>Created Date</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model != null && Model.Any())
                            {
                                @foreach (var course in Model)
                                {
                                    <tr>
                                        <td>
                                            <input type="checkbox" class="form-check-input course-checkbox" data-id="@course.Id" />
                                        </td>
                                        <td>@course.Id</td>
                                        <td>
                                            <img src="@course.ImageUrl" alt="@course.Title" class="img-thumbnail" style="width: 50px; height: 50px; object-fit: cover;" />
                                        </td>
                                        <td>@course.Title</td>
                                        <td>@course.Category</td>
                                        <td>$@course.Price.ToString("0.00")</td>
                                        <td>@course.Level</td>
                                        <td>
                                            @if (course.IsFeatured)
                                            {
                                                <span class="badge bg-success">Featured</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-secondary">Regular</span>
                                            }
                                        </td>
                                        <td>@course.CreatedAt.ToString("yyyy-MM-dd")</td>
                                        <td>
                                            <button class="btn btn-sm btn-outline-primary edit-course" 
                                                    data-id="@course.Id"
                                                    data-bs-toggle="modal" 
                                                    data-bs-target="#editCourseModal">
                                                <i class="bi bi-pencil"></i>
                                            </button>
                                            <button class="btn btn-sm btn-outline-danger delete-course" 
                                                    data-id="@course.Id" 
                                                    data-title="@course.Title"
                                                    data-bs-toggle="modal" 
                                                    data-bs-target="#deleteCourseModal">
                                                <i class="bi bi-trash"></i>
                                            </button>
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="10" class="text-center">No courses found</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <!-- Bulk Actions -->
                <div class="d-flex justify-content-between mb-4">
                    <div class="dropdown">
                        <button class="btn btn-secondary dropdown-toggle"
                                type="button"
                                id="bulkActionsDropdown"
                                data-bs-toggle="dropdown"
                                aria-expanded="false">
                            Bulk Actions
                        </button>
                        <ul class="dropdown-menu" aria-labelledby="bulkActionsDropdown">
                            <li>
                                <a class="dropdown-item" href="#" id="bulkDelete">Delete Selected</a>
                            </li>
                            <li>
                                <a class="dropdown-item" href="#" id="bulkFeature">Set as Featured</a>
                            </li>
                            <li>
                                <a class="dropdown-item" href="#" id="bulkUnfeature">Remove Featured</a>
                            </li>
                        </ul>
                    </div>

                    <!-- Pagination -->
                    @{
                        var prevDisabled = !Model.Any() || ViewBag.CurrentPage == 1 ? "disabled" : "";
                        var nextDisabled = !Model.Any() || ViewBag.CurrentPage == ViewBag.TotalPages ? "disabled" : "";
                    }

                    <nav aria-label="Course pagination">
                        <ul class="pagination">
                            <li class="page-item @prevDisabled">
                                <a class="page-link" href="@Url.Action("Index", "Admin", new { page = ViewBag.CurrentPage - 1, searchTerm = currentSearchTerm, category = currentCategory, featured = currentFeatured })" tabindex="-1">Previous</a>
                            </li>
                            @for (int i = 1; i <= (ViewBag.TotalPages ?? 1); i++)
                            {
                                <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                                    <a class="page-link" href="@Url.Action("Index", "Admin", new { page = i, searchTerm = currentSearchTerm, category = currentCategory, featured = currentFeatured })">@i</a>
                                </li>
                            }
                            <li class="page-item @nextDisabled">
                                <a class="page-link" href="@Url.Action("Index", "Admin", new { page = ViewBag.CurrentPage + 1, searchTerm = currentSearchTerm, category = currentCategory, featured = currentFeatured })">Next</a>
                            </li>
                        </ul>
                    </nav>
                </div>
            </main>
        </div>
    </div>

    <!-- Add Course Modal -->
    <div class="modal fade" id="addCourseModal" tabindex="-1" aria-labelledby="addCourseModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addCourseModalLabel">Add New Course</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form method="post" action="@Url.Action("AddCourse", "Admin")" enctype="multipart/form-data">
                    @Html.AntiForgeryToken()
                    <div class="modal-body">
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="Title" class="form-label">Course Title*</label>
                                <input type="text" class="form-control" id="Title" name="Title" maxlength="100" required />
                            </div>
                            <div class="col-md-6">
                                <label for="Category" class="form-label">Category*</label>
                                <select class="form-select" id="Category" name="Category" required>
                                    <option value="">Select Category</option>
                                    <option value="Programming">Programming</option>
                                    <option value="Design">Design</option>
                                    <option value="Business">Business</option>
                                    <option value="Marketing">Marketing</option>
                                    <option value="Data Science">Data Science</option>
                                </select>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label for="Description" class="form-label">Description*</label>
                            <textarea class="form-control" id="Description" name="Description" rows="3" maxlength="500" required></textarea>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="Price" class="form-label">Price ($)*</label>
                                <input type="number" step="0.01" class="form-control" id="Price" name="Price" required />
                            </div>
                            <div class="col-md-6">
                                <label for="Level" class="form-label">Level*</label>
                                <select class="form-select" id="Level" name="Level" required>
                                    <option value="Beginner">Beginner</option>
                                    <option value="Intermediate">Intermediate</option>
                                    <option value="Advanced">Advanced</option>
                                </select>
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="imageFile" class="form-label">Course Image*</label>
                                <input type="file" class="form-control" id="imageFile" name="imageFile" accept="image/*" required />
                            </div>
                            <div class="col-md-6">
                                <label for="IsFeatured" class="form-label">Featured Course</label>
                                <div class="form-check mt-2">
                                    <input class="form-check-input" type="checkbox" id="IsFeatured" name="IsFeatured" value="true">
                                    <input type="hidden" name="IsFeatured" value="false" />
                                    <label class="form-check-label" for="IsFeatured">
                                        Display as featured course
                                    </label>
                                </div>
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="DurationInWeeks" class="form-label">Duration (weeks)*</label>
                                <input type="number" class="form-control" id="DurationInWeeks" name="DurationInWeeks" required />
                            </div>
                            <div class="col-md-6">
                                <label for="LessonsCount" class="form-label">Number of Lessons*</label>
                                <input type="number" class="form-control" id="LessonsCount" name="LessonsCount" required />
                            </div>
                        </div>

                        <div class="mb-3">
                            <label for="ExternalUrl" class="form-label">External URL (Optional)</label>
                            <input type="url" class="form-control" id="ExternalUrl" name="ExternalUrl" maxlength="255"  required/>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                            Cancel
                        </button>
                        <button type="submit" class="btn btn-primary">
                            Save Course
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Edit Course Modal -->
    <div class="modal fade" id="editCourseModal" tabindex="-1" aria-labelledby="editCourseModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editCourseModalLabel">Edit Course</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form id="editCourseForm" method="post" action="@Url.Action("EditCourse", "Admin")" enctype="multipart/form-data">
                    @Html.AntiForgeryToken()
                    <input type="hidden" id="editId" name="Id" />
                    <div class="modal-body">
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="editTitle" class="form-label">Course Title*</label>
                                <input type="text" class="form-control" id="editTitle" name="Title" maxlength="100" required />
                            </div>
                            <div class="col-md-6">
                                <label for="editCategory" class="form-label">Category*</label>
                                <select class="form-select" id="editCategory" name="Category" required>
                                    <option value="">Select Category</option>
                                    <option value="Programming">Programming</option>
                                    <option value="Design">Design</option>
                                    <option value="Business">Business</option>
                                    <option value="Marketing">Marketing</option>
                                    <option value="Data Science">Data Science</option>
                                </select>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label for="editDescription" class="form-label">Description*</label>
                            <textarea class="form-control" id="editDescription" name="Description" rows="3" maxlength="500" required></textarea>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="editPrice" class="form-label">Price ($)*</label>
                                <input type="number" step="0.01" class="form-control" id="editPrice" name="Price" required />
                            </div>
                            <div class="col-md-6">
                                <label for="editLevel" class="form-label">Level*</label>
                                <select class="form-select" id="editLevel" name="Level" required>
                                    <option value="Beginner">Beginner</option>
                                    <option value="Intermediate">Intermediate</option>
                                    <option value="Advanced">Advanced</option>
                                </select>
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="editImageFile" class="form-label">Course Image</label>
                                <input type="file" class="form-control" id="editImageFile" name="imageFile" accept="image/*" />
                                <div class="mt-2">
                                    <img src="" id="currentThumbnail" class="img-thumbnail" alt="Current thumbnail" style="max-height: 100px;" />
                                    <small class="form-text text-muted">Current image (leave empty to keep)</small>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <label for="editIsFeatured" class="form-label">Featured Course</label>
                                <div class="form-check mt-2">
                                    <input class="form-check-input" type="checkbox" id="editIsFeatured" name="IsFeatured" value="true">
                                    <input type="hidden" name="IsFeatured" value="false" />
                                    <label class="form-check-label" for="editIsFeatured">
                                        Display as featured course
                                    </label>
                                </div>
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="editDurationInWeeks" class="form-label">Duration (weeks)*</label>
                                <input type="number" class="form-control" id="editDurationInWeeks" name="DurationInWeeks" required />
                            </div>
                            <div class="col-md-6">
                                <label for="editLessonsCount" class="form-label">Number of Lessons*</label>
                                <input type="number" class="form-control" id="editLessonsCount" name="LessonsCount" required />
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="editExternalUrl" class="form-label">External URL (Optional)</label>
                                <input type="url" class="form-control" id="editExternalUrl" name="ExternalUrl" maxlength="255" />
                            </div>
                            <div class="col-md-6">
                                <div class="row">
                                    <div class="col-md-6">
                                        <label class="form-label">Students Enrolled</label>
                                        <input type="number" class="form-control" id="editStudentsEnrolled" name="StudentsEnrolled" readonly />
                                    </div>
                                    <div class="col-md-6">
                                        <label class="form-label">Rating</label>
                                        <input type="number" step="0.1" class="form-control" id="editRating" name="Rating" readonly />
                                        <input type="hidden" id="editRatingCount" name="RatingCount" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                            Cancel
                        </button>
                        <button type="submit" class="btn btn-primary">
                            Update Course
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Delete Course Modal -->
    <div class="modal fade" id="deleteCourseModal" tabindex="-1" aria-labelledby="deleteCourseModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteCourseModalLabel">
                        Delete Course
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>
                        Are you sure you want to delete this course? This action cannot be
                        undone.
                    </p>
                    <p>
                        <strong id="deleteCourseTitle"></strong>
                    </p>
                    <form id="deleteCourseForm" method="post" action="@Url.Action("DeleteCourse", "Admin")">
                        @Html.AntiForgeryToken()
                        <input type="hidden" id="deleteId" name="id" />
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                        Cancel
                    </button>
                    <button type="button" class="btn btn-danger" id="confirmDelete">
                        Delete
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Bulk Delete Form (Hidden) -->
    <form id="bulkDeleteForm" method="post" action="@Url.Action("BulkDeleteCourses", "Admin")" style="display:none;">
        @Html.AntiForgeryToken()
        <div id="bulkDeleteIds"></div>
    </form>

    <!-- Bulk Feature Form (Hidden) -->
    <form id="bulkFeatureForm" method="post" action="@Url.Action("BulkFeatureCourses", "Admin")" style="display:none;">
        @Html.AntiForgeryToken()
        <input type="hidden" name="featured" id="bulkFeatureValue" />
        <div id="bulkFeatureIds"></div>
    </form>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Handle edit button click
            document.querySelectorAll('.edit-course').forEach(button => {
                button.addEventListener('click', function() {
                    const courseId = this.getAttribute('data-id');
                    // Fetch course data for editing
                    fetch(`/Admin/GetCourseData/${courseId}`)
                        .then(response => response.json())
                        .then(data => {
                            // Populate the edit form
                            document.getElementById('editId').value = data.id;
                            document.getElementById('editTitle').value = data.title;
                            document.getElementById('editDescription').value = data.description;
                            document.getElementById('editCategory').value = data.category;
                            document.getElementById('editPrice').value = data.price;
                            document.getElementById('editLevel').value = data.level;
                            document.getElementById('editDurationInWeeks').value = data.durationInWeeks;
                            document.getElementById('editLessonsCount').value = data.lessonsCount;
                            document.getElementById('editExternalUrl').value = data.externalUrl || '';
                            document.getElementById('editIsFeatured').checked = data.isFeatured;
                            document.getElementById('editStudentsEnrolled').value = data.studentsEnrolled;
                            document.getElementById('editRating').value = data.rating;
                            document.getElementById('editRatingCount').value = data.ratingCount;
                            
                            // Set the current thumbnail image
                            document.getElementById('currentThumbnail').src = data.imageUrl;
                        })
                        .catch(error => {
                            console.error('Error fetching course details:', error);
                            alert('Failed to load course details. Please try again.');
                        });
                });
            });

            // Handle delete button click
            document.querySelectorAll('.delete-course').forEach(button => {
                button.addEventListener('click', function() {
                    const courseId = this.getAttribute('data-id');
                    const courseTitle = this.getAttribute('data-title');
                    
                    document.getElementById('deleteId').value = courseId;
                    document.getElementById('deleteCourseTitle').textContent = courseTitle;
                });
            });

            // Handle confirm delete
            document.getElementById('confirmDelete').addEventListener('click', function() {
                document.getElementById('deleteCourseForm').submit();
            });

            // Handle select all checkbox
            document.getElementById('selectAll').addEventListener('change', function() {
                const isChecked = this.checked;
                document.querySelectorAll('.course-checkbox').forEach(checkbox => {
                    checkbox.checked = isChecked;
                });
            });

            // Handle bulk delete
            document.getElementById('bulkDelete').addEventListener('click', function(e) {
                e.preventDefault();
                const selectedIds = getSelectedCourseIds();
                
                if(selectedIds.length === 0) {
                    alert('No courses selected');
                    return;
                }

                if(confirm('Are you sure you want to delete all selected courses? This action cannot be undone.')) {
                    // Add the selected IDs to the form
                    const container = document.getElementById('bulkDeleteIds');
                    container.innerHTML = ''; // Clear previous inputs
                    
                    selectedIds.forEach(id => {
                        const input = document.createElement('input');
                        input.type = 'hidden';
                        input.name = 'ids';
                        input.value = id;
                        container.appendChild(input);
                    });
                    
                    // Submit the form
                    document.getElementById('bulkDeleteForm').submit();
                }
            });

            // Handle bulk feature
            document.getElementById('bulkFeature').addEventListener('click', function(e) {
                e.preventDefault();
                bulkSetFeatured(true);
            });

            // Handle bulk unfeature
            document.getElementById('bulkUnfeature').addEventListener('click', function(e) {
                e.preventDefault();
                bulkSetFeatured(false);
            });

            // Helper function to get selected course IDs
            function getSelectedCourseIds() {
                return Array.from(document.querySelectorAll('.course-checkbox:checked'))
                    .map(checkbox => checkbox.getAttribute('data-id'));
            }

            // Helper function for bulk featuring/unfeaturing
            function bulkSetFeatured(isFeatured) {
                const selectedIds = getSelectedCourseIds();
                
                if(selectedIds.length === 0) {
                    alert('No courses selected');
                    return;
                }

                const action = isFeatured ? 'set as featured' : 'remove from featured';
                if(confirm(`Are you sure you want to ${action} all selected courses?`)) {
                    // Set the featured value
                    document.getElementById('bulkFeatureValue').value = isFeatured;
                    
                    // Add the selected IDs to the form
                    const container = document.getElementById('bulkFeatureIds');
                    container.innerHTML = ''; // Clear previous inputs
                    
                    selectedIds.forEach(id => {
                        const input = document.createElement('input');
                        input.type = 'hidden';
                        input.name = 'ids';
                        input.value = id;
                        container.appendChild(input);
                    });
                    
                    // Submit the form
                    document.getElementById('bulkFeatureForm').submit();
                }
            }
        });
    </script>
</body>
</html>