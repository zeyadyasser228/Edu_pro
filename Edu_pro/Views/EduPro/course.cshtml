@model List<EduPro.Models.CourseModel>
@{
    ViewData["Title"] = "Browse Courses";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Browse Courses - EDU PRO</title>
    <link rel="shortcut icon" href="~/images/logo.jpeg" type="image/svg+xml">
    <link rel="stylesheet" href="~/css/edupro.css" />
    <link rel="stylesheet" href="~/css/styles.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />

    <!-- Google Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=League+Spartan:wght@400;500;600;700;800&family=Poppins:wght@400;500&display=swap" rel="stylesheet">

    <!-- IonIcons -->
    <script type="module" src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"></script>
    <script nomodule src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"></script>
</head>
<body>
    <header>
        <div class="container">
            <a asp-controller="EduPro" asp-action="Index" class="logo">
                <img src="~/images/logo.jpeg" width="75" height="50" alt="EduWeb logo">
            </a>

            <nav>
                <ul>
                    <li><a asp-controller="EduPro" asp-action="Index">Home</a></li>
                    <li><a asp-controller="EduPro" asp-action="Index" asp-fragment="about">About</a></li>
                    <li><a asp-controller="Course" asp-action="Index" class="active">Courses</a></li>
                    <li><a asp-controller="EduPro" asp-action="Index" asp-fragment="footer">Contact Us</a></li>
                </ul>
            </nav>

            <div class="header-actions">
                <button class="header-action-btn" aria-label="search" title="Search" id="searchToggle">
                    <ion-icon name="search-outline" aria-hidden="true"></ion-icon>
                </button>

                <a asp-controller="Cart" asp-action="Index" class="header-action-btn" aria-label="cart" title="Shopping Cart">
                    <ion-icon name="cart-outline" aria-hidden="true"></ion-icon>
                    <span class="btn-badge">2</span>
                </a>

                @if (User.Identity.IsAuthenticated)
                {
                    <!-- User Dropdown - Shown when logged in -->
                    <div class="user-dropdown">
                        <button class="user-dropdown-toggle" aria-label="User menu" title="User Menu">
                            <ion-icon name="person-circle-outline" aria-hidden="true"></ion-icon>
                            <span>@User.Identity.Name</span>
                            <ion-icon name="chevron-down-outline" class="dropdown-arrow" aria-hidden="true"></ion-icon>
                        </button>
                        <div class="user-dropdown-menu">
                            <div class="user-info-header">
                                Signed in as <br><strong>@User.Identity.Name</strong>
                            </div>
                            <a asp-controller="EduPro" asp-action="MyCourses">
                                <ion-icon name="book-outline" aria-hidden="true"></ion-icon>
                                My Courses
                            </a>
                            <a asp-controller="EduPro" asp-action="Settings">
                                <ion-icon name="settings-outline" aria-hidden="true"></ion-icon>
                                Settings
                            </a>
                            <hr class="dropdown-divider">
                            <form asp-controller="Auth" asp-action="Logout" method="post" class="logout-form">
                                <button type="submit" class="logout-btn">
                                    <ion-icon name="log-out-outline" aria-hidden="true"></ion-icon>
                                    Logout
                                </button>
                            </form>
                        </div>
                    </div>
                }
                else
                {
                    <!-- Sign Up Button - Shown when not logged in -->
                    <a class="btn btn-signup" asp-controller="Auth" asp-action="Signup">
                        Sign Up
                        <ion-icon name="arrow-forward-outline" aria-hidden="true"></ion-icon>
                    </a>
                }
            </div>
        </div>

        <!-- Search Container -->
        <div class="search-container" id="searchContainer">
            <div class="search-wrapper">
                <form asp-controller="Course" asp-action="Search" method="get">
                    <input type="text" name="searchTerm" placeholder="Search courses..." class="search-input" value="@ViewBag.SearchTerm">
                    <button type="submit" class="search-submit" aria-label="Submit search">
                        <ion-icon name="search-outline" aria-hidden="true"></ion-icon>
                    </button>
                </form>
            </div>
        </div>
    </header>
    <section class="courses-hero">
        <div class="container">
            <h1>Browse Our Courses</h1>
            <p>Discover a wide range of courses to enhance your skills and knowledge</p>
        </div>
    </section>

    <section class="filter-section">
        <div class="container">
            <form asp-controller="Course" asp-action="Filter" method="get" class="filters">
                <div class="filter-group">
                    <label for="category">Category</label>
                    <select id="category" name="category">
                        <option value="all" selected="@(ViewBag.Category == null || ViewBag.Category == "all")">All Categories</option>
                        <option value="Programming" selected="@(ViewBag.Category == "Programming")">Programming</option>
                        <option value="Design" selected="@(ViewBag.Category == "Design")">Design</option>
                        <option value="Marketing" selected="@(ViewBag.Category == "Marketing")">Marketing</option>
                        <option value="Business" selected="@(ViewBag.Category == "Business")">Business</option>
                        <option value="Data Science" selected="@(ViewBag.Category == "Data Science")">Data Science</option>
                        <option value="Personal Development" selected="@(ViewBag.Category == "Personal Development")">Personal Development</option>
                    </select>
                </div>
                <div class="filter-group">
                    <label for="level">Level</label>
                    <select id="level" name="level">
                        <option value="all" selected="@(ViewBag.Level == null || ViewBag.Level == "all")">All Levels</option>
                        <option value="Beginner" selected="@(ViewBag.Level == "Beginner")">Beginner</option>
                        <option value="Intermediate" selected="@(ViewBag.Level == "Intermediate")">Intermediate</option>
                        <option value="Advanced" selected="@(ViewBag.Level == "Advanced")">Advanced</option>
                        <option value="All Levels" selected="@(ViewBag.Level == "All Levels")">All Levels</option>
                    </select>
                </div>
                <div class="filter-group">
                    <label for="duration">Duration</label>
                    <select id="duration" name="duration">
                        <option value="all" selected="@(ViewBag.Duration == null || ViewBag.Duration == "all")">Any Duration</option>
                        <option value="short" selected="@(ViewBag.Duration == "short")">1-4 Weeks</option>
                        <option value="medium" selected="@(ViewBag.Duration == "medium")">5-8 Weeks</option>
                        <option value="long" selected="@(ViewBag.Duration == "long")">9+ Weeks</option>
                    </select>
                </div>
                <div class="filter-group">
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-filter"></i> Apply Filters
                    </button>
                </div>
            </form>
        </div>
    </section>

    <section class="courses-grid">
        <div class="container">
            @if (Model != null && Model.Any())
            {
                <div class="courses-container" id="courses-container">
                    @foreach (var course in Model)
                    {
                        <div class="course-card">
                            <div class="course-image">
                                <img src="@course.ImageUrl" alt="@course.Title">
                                <div class="course-duration">
                                    <i class="fas fa-clock"></i> @course.DurationInWeeks Weeks
                                </div>
                            </div>
                            <div class="course-content">
                                <span class="course-level @course.Level.ToLower()">@course.Level</span>
                                <h3 class="course-title">@course.Title</h3>
                                <p class="course-description">@course.Description.Substring(0, Math.Min(100, course.Description.Length))...</p>
                                <div class="course-meta">
                                    <div class="course-rating">
                                        <i class="fas fa-star"></i> @course.Rating.ToString("0.0")
                                    </div>
                                    <div class="course-price">$@course.Price.ToString("0.00")</div>
                                </div>
                                <div class="course-stats">
                                    <div><i class="fas fa-book"></i> @course.LessonsCount Lessons</div>
                                    <div><i class="fas fa-users"></i> @course.StudentsEnrolled Students</div>
                                </div>
                                <div class="course-action">
                                    <div class="course-actions">
                                        <form asp-controller="Cart" asp-action="AddToCart" method="post" style="display: inline;">
                                            <input type="hidden" name="courseId" value="@course.Id" />
                                            <button type="submit" class="btn btn-primary">
                                                <i class="fas fa-shopping-cart"></i> Add to Cart
                                            </button>
                                        </form>
                                        <a asp-controller="Course" asp-action="Details" asp-route-id="@course.Id" class="btn btn-secondary">View Details</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <!-- PAGINATION -->
                <div class="pagination">
                    <button onclick="location.href='@Url.Action(ViewContext.RouteData.Values["action"].ToString(),
                        new {
                            page = Math.Max(1, ViewBag.CurrentPage - 1),
                            category = ViewBag.Category,
                            level = ViewBag.Level,
                            duration = ViewBag.Duration,
                            searchTerm = ViewBag.SearchTerm
                        })'"
                    @(ViewBag.CurrentPage <= 1 ? "disabled" : "")>
                        <i class="fas fa-chevron-left"></i> Previous
                    </button>
                    <div id="page-numbers">
                        <span class="active">@ViewBag.CurrentPage</span>
                        <span>of</span>
                        <span>@ViewBag.TotalPages</span>
                    </div>
                    <button onclick="location.href='@Url.Action(ViewContext.RouteData.Values["action"].ToString(),
                        new {
                            page = Math.Min(ViewBag.TotalPages, ViewBag.CurrentPage + 1),
                            category = ViewBag.Category,
                            level = ViewBag.Level,
                            duration = ViewBag.Duration,
                            searchTerm = ViewBag.SearchTerm
                        })'"
                    @(ViewBag.CurrentPage >= ViewBag.TotalPages ? "disabled" : "")>
                        Next <i class="fas fa-chevron-right"></i>
                    </button>
                </div>
            }
            else
            {
                <div class="no-courses">
                    <h3>No courses found matching your criteria</h3>
                    <p>Try adjusting your filters or search term to find more courses.</p>
                </div>
            }
        </div>
    </section>

    <footer>
        <div class="container">
            <div class="footer-content">
                <div class="footer-logo">
                    <img src="~/images/logo.jpeg" width="75" height="50" alt="EduWeb logo">
                    <h3>EDU PRO</h3>
                    <p>Connecting learners worldwide.</p>
                </div>
                <div class="footer-links">
                    <h4>Quick Links</h4>
                    <ul>
                        <li><a asp-controller="EduPro" asp-action="Index">Home</a></li>
                        <li><a asp-controller="EduPro" asp-action="Index" asp-fragment="about">About</a></li>
                        <li><a asp-controller="Course" asp-action="Index">Courses</a></li>
                        <li><a asp-controller="EduPro" asp-action="Index" asp-fragment="footer">Contact Us</a></li>
                    </ul>
                </div>
                <div class="footer-contact">
                    <h4>Contact Us</h4>
                    <p><i class="fas fa-envelope"></i> info@edupro.com</p>
                    <p><i class="fas fa-phone"></i> +01 123 4567 890</p>
                    <p><i class="fas fa-map-marker-alt"></i> 70-80 Upper St Norwich NR2</p>
                    <div class="social-icons">
                        <a href="#"><i class="fab fa-facebook"></i></a>
                        <a href="#"><i class="fab fa-twitter"></i></a>
                        <a href="#"><i class="fab fa-instagram"></i></a>
                        <a href="#"><i class="fab fa-linkedin"></i></a>
                        <a href="#"><i class="fab fa-youtube"></i></a>
                    </div>
                </div>
            </div>
            <div class="footer-bottom">
                <p>&copy; @DateTime.Now.Year All Rights Reserved by <a href="#">EDU PRO</a></p>
            </div>
        </div>
    </footer>

    <!-- BACK TO TOP -->
    <a href="#top" class="back-top-btn" aria-label="back to top" data-back-top-btn>
        <ion-icon name="chevron-up" aria-hidden="true"></ion-icon>
    </a>

    <!-- SCRIPTS -->
    <script src="~/js/edupro.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // User Dropdown Logic
            const userDropdown = document.querySelector('.user-dropdown');
            if (userDropdown) {
                const toggleButton = userDropdown.querySelector('.user-dropdown-toggle');
                const menu = userDropdown.querySelector('.user-dropdown-menu');
                const arrow = userDropdown.querySelector('.dropdown-arrow');

                toggleButton.addEventListener('click', function(e) {
                    e.stopPropagation();
                    menu.classList.toggle('show');
                    arrow.classList.toggle('up');
                });

                document.addEventListener('click', function(e) {
                    if (!userDropdown.contains(e.target)) {
                        menu.classList.remove('show');
                        arrow.classList.remove('up');
                    }
                });
            }

            // Search Toggle Logic
            const searchToggle = document.getElementById('searchToggle');
            const searchContainer = document.getElementById('searchContainer');
            if (searchToggle && searchContainer) {
                searchToggle.addEventListener('click', function () {
                    searchContainer.classList.toggle('active');
                    this.classList.toggle('active');

                    if (searchContainer.classList.contains('active')) {
                        const searchInput = searchContainer.querySelector('.search-input');
                        if (searchInput) {
                            searchInput.focus();
                        }
                    }
                });

                document.addEventListener('click', function(e) {
                    if (!searchContainer.contains(e.target) && !searchToggle.contains(e.target)) {
                        searchContainer.classList.remove('active');
                        searchToggle.classList.remove('active');
                    }
                });
            }

            // Header Active Logic
            const header = document.querySelector("header");
            const backTopBtn = document.querySelector("[data-back-top-btn]");

            window.addEventListener("scroll", function () {
                if (window.scrollY >= 100) {
                    header.classList.add("active");
                    if (backTopBtn) backTopBtn.classList.add("active");
                } else {
                    header.classList.remove("active");
                    if (backTopBtn) backTopBtn.classList.remove("active");
                }
            });
        });

        // Enhanced add to cart function
        function addToCart(courseId) {
            // Show loading effect on button
            const button = event.currentTarget;
            const originalText = button.innerHTML;
            button.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Adding...';
            button.disabled = true;

            fetch('/api/cart/add', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ courseId: courseId })
            })
            .then(response => {
                if (response.ok) {
                    return response.json();
                }
                throw new Error('Network response was not ok');
            })
            .then(data => {
                // Update cart count in UI
                const cartBadge = document.querySelector('.btn-badge');
                if (cartBadge) {
                    cartBadge.textContent = data.cartCount;
                    // Make the badge pulse
                    cartBadge.classList.add('pulse');
                    setTimeout(() => cartBadge.classList.remove('pulse'), 1000);
                }

                // Show success feedback
                button.innerHTML = '<i class="fas fa-check"></i> Added';
                button.style.backgroundColor = '#28a745';

                // Reset button after delay
                setTimeout(() => {
                    button.innerHTML = originalText;
                    button.style.backgroundColor = '';
                    button.disabled = false;
                }, 2000);
            })
            .catch((error) => {
                console.error('Error:', error);
                button.innerHTML = '<i class="fas fa-exclamation-triangle"></i> Failed';
                button.style.backgroundColor = '#dc3545';

                // Reset button after delay
                setTimeout(() => {
                    button.innerHTML = originalText;
                    button.style.backgroundColor = '';
                    button.disabled = false;
                }, 2000);
            });
        }
    </script>
</body>
</html>