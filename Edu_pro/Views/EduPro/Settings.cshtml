@{
    ViewData["Title"] = "Account Settings";
   @if (TempData["Success"] != null)
    {
        <div class="alert alert-success">@TempData["Success"]</div>
    }
   @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger">@TempData["Error"]</div>
    }

}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Account Settings - EduWeb</title>
    <link rel="stylesheet" href="~/css/edupro.css">
    <!-- Include any additional CSS specific to this page -->
    <style>
        .settings-container {
            padding: 2rem 0;
        }

        .settings-tabs {
            display: flex;
            border-bottom: 1px solid var(--platinum);
            margin-bottom: 2rem;
            overflow-x: auto;
        }

        .tab-btn {
            padding: 1rem 1.5rem;
            background: none;
            border: none;
            border-bottom: 3px solid transparent;
            font-family: var(--ff-league-spartan);
            font-weight: var(--fw-500);
            color: var(--eerie-black-1);
            cursor: pointer;
            transition: var(--transition-1);
            white-space: nowrap;
        }

            .tab-btn.active {
                color: var(--kappel);
                border-bottom-color: var(--kappel);
            }

            .tab-btn:hover:not(.active) {
                color: var(--kappel_70);
            }

        .tab-content {
            display: none;
        }

            .tab-content.active {
                display: block;
            }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: var(--fw-500);
            color: var(--eerie-black-1);
        }

        .form-input {
            width: 100%;
            padding: 0.75rem 1rem;
            border: 1px solid var(--platinum);
            border-radius: var(--radius-5);
            font-family: var(--ff-poppins);
            transition: border-color var(--transition-1);
        }

            .form-input:focus {
                outline: none;
                border-color: var(--kappel);
            }

        .form-hint {
            font-size: var(--fs-7);
            color: var(--gray-web);
            margin-top: 0.25rem;
        }

        .profile-picture {
            display: flex;
            align-items: center;
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .avatar {
            width: 100px;
            height: 100px;
            border-radius: 50%;
            object-fit: cover;
            border: 3px solid var(--platinum);
        }

        .upload-btn {
            background-color: var(--platinum);
            color: var(--eerie-black-1);
            padding: 0.5rem 1rem;
            border-radius: var(--radius-5);
            cursor: pointer;
            transition: var(--transition-1);
            border: none;
        }

            .upload-btn:hover {
                background-color: var(--kappel_15);
                color: var(--kappel);
            }

        .btn-group {
            display: flex;
            gap: 1rem;
            margin-top: 2rem;
        }

        .save-btn {
            background-color: var(--kappel);
            color: var(--white);
        }

        .cancel-btn {
            background-color: var(--platinum);
            color: var(--eerie-black-1);
        }

        .delete-account {
            margin-top: 3rem;
            padding-top: 2rem;
            border-top: 1px solid var(--platinum);
        }

            .delete-account h3 {
                color: var(--radical-red);
                margin-bottom: 1rem;
            }

            .delete-account p {
                margin-bottom: 1.5rem;
                color: var(--gray-web);
            }

        .delete-btn {
            background-color: var(--radical-red_10);
            color: var(--radical-red);
            border: 1px solid var(--radical-red);
        }

            .delete-btn:hover {
                background-color: var(--radical-red);
                color: var(--white);
            }

        /* Responsive adjustments */
        @@media (max-width: 768px) {
            .profile-picture

        {
            flex-direction: column;
            align-items: flex-start;
        }

        .btn-group {
            flex-direction: column;
        }

            .btn-group .btn {
                width: 100%;
            }

        }
    </style>
</head>

<body>
    <!-- Include header partial or navigation component -->

    <main>
        <section class="section settings-container">
            <div class="container">
                <h1 class="h2 section-title">Account Settings</h1>

                <div class="settings-tabs">
                    <button class="tab-btn active" data-tab="password">Change Password</button>
                </div>


                <!-- Change Password Tab -->
                <div id="password" class="tab-content">
                    <form asp-controller="Settings" asp-action="ChangePassword" method="post">

                        <div class="form-group">
                            <label for="currentPassword" class="form-label">Current Password</label>
                            <input type="password" id="currentPassword" name="CurrentPassword" class="form-input" required>
                        </div>

                        <div class="form-group">
                            <label for="newPassword" class="form-label">New Password</label>
                            <input type="password" id="newPassword" name="NewPassword" class="form-input" required>
                        </div>

                        <div class="form-group">
                            <label for="confirmPassword" class="form-label">Confirm New Password</label>
                            <input type="password" id="confirmPassword" name="ConfirmPassword" class="form-input" required>
                        </div>

                        <div class="btn-group">
                            <button type="submit" class="btn save-btn">Update Password</button>
                            <button type="button" class="btn cancel-btn">Cancel</button>
                        </div>

                        @if (TempData["PasswordChangeStatus"] != null)
                        {
                            <p style="color: @(TempData["PasswordChangeStatus"].ToString() == "Success" ? "green" : "red")">
                                @TempData["PasswordChangeMessage"]
                            </p>
                        }
                    </form>
                </div>


            </div>
        </section>
    </main>

    <!-- Include footer partial -->

    <!-- Back to top button -->
    <a href="#top" class="back-top-btn" aria-label="back to top" data-back-top-btn>
        <ion-icon name="chevron-up" aria-hidden="true"></ion-icon>
    </a>

    <!-- IonIcons -->
    <script type="module" src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"></script>
    <script nomodule src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"></script>

    <!-- Custom scripts -->
    <script src="~/js/edupro.js"></script>

    <script>
        // Tab switching functionality
        document.addEventListener('DOMContentLoaded', function() {
            const tabButtons = document.querySelectorAll('.tab-btn');
            const tabContents = document.querySelectorAll('.tab-content');

            tabButtons.forEach(button => {
                button.addEventListener('click', function() {
                    // Get the tab to activate
                    const tabToActivate = this.dataset.tab;

                    // Remove active class from all buttons and tabs
                    tabButtons.forEach(btn => btn.classList.remove('active'));
                    tabContents.forEach(content => content.classList.remove('active'));

                    // Add active class to clicked button and corresponding tab
                    this.classList.add('active');
                    document.getElementById(tabToActivate).classList.add('active');
                });
            });

            // File upload preview (optional enhancement)
            const profilePicture = document.getElementById('profilePicture');
            const avatar = document.querySelector('.avatar');

            if (profilePicture && avatar) {
                profilePicture.addEventListener('change', function() {
                    const file = this.files[0];
                    if (file) {
                        const reader = new FileReader();
                        reader.onload = function(e) {
                            avatar.src = e.target.result;
                        }
                        reader.readAsDataURL(file);
                    }
                });
            }
        });
    </script>
</body>
</html>